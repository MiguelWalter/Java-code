import java.io.*;
import java.util.*;

public class JavaApplication1 {

    static class Player {
        String playerId;
        String gameId;
        int currency;

        Player(String playerId, String gameId, int currency) {
            this.playerId = playerId;
            this.gameId = gameId;
            this.currency = currency;
        }
    }

    public static void main(String[] args) {
        // Define the filename (adjust the path if necessary)
        String filename = "GameAnalyticsDataset.csv";  // Adjust the file name if needed
        
        // Print the current working directory
        System.out.println("Current directory: " + System.getProperty("user.dir"));

        // Check if the file exists before trying to read it
        File file = new File(filename);
        if (!file.exists()) {
            System.out.println("Error: The file " + filename + " does not exist.");
            return;  // Exit if the file doesn't exist
        }

        // Reading player data from the file
        List<Player> players = readPlayerData(filename);

        // Ensure that at least two players exist before trying to compare
        if (players.size() >= 2) {
            // Create a list of player IDs for selection
            List<String> playerIds = new ArrayList<>();
            for (Player player : players) {
                if (!playerIds.contains(player.playerId)) {
                    playerIds.add(player.playerId);
                }
            }

            // Prompt user to select two Player IDs for comparison
            Scanner scanner = new Scanner(System.in);
            System.out.println("Available Player IDs: " + playerIds);
            
            System.out.print("Enter Player ID for comparison 1: ");
            String playerId1 = scanner.nextLine().trim();

            System.out.print("Enter Player ID for comparison 2: ");
            String playerId2 = scanner.nextLine().trim();

            // Find the players by their IDs
            Player player1 = findPlayerById(players, playerId1);
            Player player2 = findPlayerById(players, playerId2);

            if (player1 != null && player2 != null) {
                // Comparing currency
                compareCurrency(player1, player2);
            } else {
                System.out.println("Error: One or both player IDs not found.");
            }
        } else {
            System.out.println("Not enough players to compare.");
        }
    }

    // Method to read player data from file
    public static List<Player> readPlayerData(String filename) {
        List<Player> players = new ArrayList<>();
        
        try (BufferedReader br = new BufferedReader(new FileReader(filename))) {
            String line;
            // Skip the header line
            br.readLine();  // Assuming the first line is headers

            while ((line = br.readLine()) != null) {
                // Trim whitespace and skip empty lines
                line = line.trim();
                if (line.isEmpty()) {
                    continue;  // Skip empty lines
                }

                String[] parts = line.split(",");
                if (parts.length >= 8) {  // We expect at least 8 fields (including Player ID and In-Game Currency)
                    String playerId = parts[0].trim();
                    String gameId = parts[1].trim();
                    String currencyStr = parts[7].trim();  // In-Game Currency is the 8th column

                    try {
                        int currency = Integer.parseInt(currencyStr);
                        players.add(new Player(playerId, gameId, currency));
                    } catch (NumberFormatException e) {
                        System.out.println("Error parsing currency for player: " + playerId + " (currency value: " + currencyStr + ")");
                    }
                } else {
                    System.out.println("Skipping invalid line: " + line);
                }
            }
        } catch (IOException e) {
            System.out.println("Error reading file: " + e.getMessage());
        }

        return players;
    }

    // Method to find a player by their ID
    public static Player findPlayerById(List<Player> players, String playerId) {
        for (Player player : players) {
            if (player.playerId.equals(playerId)) {
                return player;
            }
        }
        return null;  // Return null if player is not found
    }

    // Method to compare the currency of two players
    public static void compareCurrency(Player player1, Player player2) {
        System.out.println("Comparing Player " + player1.playerId + " and Player " + player2.playerId);

        if (player1.currency > player2.currency) {
            System.out.println(player1.playerId + " has more currency (" + player1.currency + ") than " + player2.playerId + " (" + player2.currency + ")");
        } else if (player1.currency < player2.currency) {
            System.out.println(player2.playerId + " has more currency (" + player2.currency + ") than " + player1.playerId + " (" + player1.currency + ")");
        } else {
            System.out.println(player1.playerId + " and " + player2.playerId + " have the same amount of currency: " + player1.currency);
        }
    }
}
